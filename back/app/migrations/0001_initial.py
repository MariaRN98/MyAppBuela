# Generated by Django 5.1.3 on 2025-04-20 09:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dependiente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='depedientes/')),
                ('nombre', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('movilidad', models.TextField()),
                ('enfermedades', models.TextField()),
                ('alergias', models.TextField()),
                ('vacunas', models.TextField()),
                ('medicamentos', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='usuarios/')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('telefono', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Compra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producto', models.CharField(max_length=100)),
                ('cantidad', models.IntegerField()),
                ('precio_aprx_unid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tienda', models.CharField(max_length=100)),
                ('comprado', models.BooleanField(default=False)),
                ('dependiente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependendiente_compra', to='app.dependiente')),
            ],
        ),
        migrations.CreateModel(
            name='Comida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('dias_semana', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miercoles', 'Miercoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes'), ('Sabado', 'Sabado'), ('Domingo', 'Domingo')], max_length=100)),
                ('tipo_comida', models.CharField(choices=[('Desayuno', 'Desuayuno'), ('Mediama単ana', 'Mediama単ana'), ('Almuerzo', 'Almuerzo'), ('Merienda', 'Merinda'), ('Cena', 'Cena')], max_length=100)),
                ('hora', models.TimeField(blank=True, null=True)),
                ('comido', models.BooleanField(default=False)),
                ('dependiente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependendiente_comida', to='app.dependiente')),
            ],
        ),
        migrations.CreateModel(
            name='Acceso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rol', models.CharField(choices=[('Admin', 'Admin'), ('Editor', 'Editor'), ('Lector', 'Lector')], default='Lector', max_length=100)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuario_acceso', to=settings.AUTH_USER_MODEL)),
                ('dependiente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependiente_acceso', to='app.dependiente')),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('fecha_inicio', models.DateTimeField(blank=True, null=True)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('tipo_evento', models.CharField(choices=[('Cita medica', 'Cita medica'), ('Visita', 'Visita'), ('Cumplea単os', 'Cumplea単os'), ('Cura', 'Cura'), ('Vacuna', 'Vacuna'), ('Otros', 'Otros')], max_length=100)),
                ('dependiente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependendiente_evento', to='app.dependiente')),
            ],
        ),
        migrations.CreateModel(
            name='Medicamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicamento', models.CharField(max_length=100)),
                ('dosis', models.CharField(max_length=100)),
                ('dias_semana', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miercoles', 'Miercoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes'), ('Sabado', 'Sabado'), ('Domingo', 'Domingo')], max_length=100)),
                ('hora', models.TimeField(blank=True, null=True)),
                ('tomado', models.BooleanField(default=False)),
                ('dependiente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependendiente_medicamento', to='app.dependiente')),
            ],
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100)),
                ('cuerpo', models.TextField()),
                ('fecha_publicacoin', models.DateTimeField(blank=True, null=True)),
                ('dependiente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependiente_nota', to='app.dependiente')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuario_nota', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dias_semana', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miercoles', 'Miercoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes'), ('Sabado', 'Sabado'), ('Domingo', 'Domingo')], max_length=100)),
                ('hora_inicio', models.TimeField(blank=True, null=True)),
                ('hora_fin', models.TimeField(blank=True, null=True)),
                ('dependiente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependiente_turno', to='app.dependiente')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuario_turno', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
